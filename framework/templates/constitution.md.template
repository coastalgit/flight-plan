# {{PROJECT_NAME}} Constitution

**Flight Plan Integration**

This file integrates Spec-Kit with Flight Plan.  
Created via: `flight-plan enable-speckit`

---

## Context Files (Read These)

**Project Specs:**
- `../project-prd.md` - What to build, tech stack, constraints

**Flight Plan Status:**
- `../.flight-plan/current.md` - Current phase, activity, blockers
- `../../../flight-plan-solution/FLIGHT-PLAN-PHASES.md` - Phase definitions

**Project Rules:**
- `../project-rules.md` - Complete project rules and standards

---

## Technical Constraints

**Source:** project-prd.md (Implementation section)

Read project-prd.md for:
- Language, framework, database
- Quality standards
- Performance requirements
- Security requirements

---

## Quality Standards by Phase

**Current Phase:** See .flight-plan/current.md

**Standards:**
- **Phase 1-3 (Design):** Planning mode
- **Phase 4 (Validate):** POC/prototype standards
- **Phase 5-8 (Build/Deploy):** Production standards (see project-prd.md)

See FLIGHT-PLAN-PHASES.md for detailed phase standards.

---

## How This Works

When you use Spec-Kit:
1. Read project-prd.md for project context
2. Check .flight-plan/current.md for current phase
3. Reference FLIGHT-PLAN-PHASES.md for phase standards
4. Apply appropriate quality bar

**Example:**
- Phase 4 + project-prd.md "80% test coverage" 
  = Build POC with minimal tests, target 80% in Phase 5

---

## Spec-Kit Commands

Use Spec-Kit commands for feature development:
- `/speckit.spec [feature]` - Create feature spec
- `/speckit.plan` - Create implementation plan
- `/speckit.tasks` - Break down tasks
- `/speckit.implement` - Execute implementation

AI will automatically:
- Check current phase
- Apply appropriate standards
- Reference Flight Plan context

---

**This constitution is a pointer to Flight Plan files.**  
**The actual rules live in project-prd.md and project-rules.md.**

**Template Version:** 1.0  
**Generated:** {{GENERATION_DATE}}

