# {{PROJECT_NAME}} - Implementation

**Version:** 0.1  
**Status:** Draft  
**PRD Source:** solution-prd-v{{PRD_VERSION}}.md  
**Last Updated:** {{LAST_UPDATED}}

---

## Technology Stack

### Language & Runtime
- **Primary:** {{LANGUAGE}}
- **Version:** {{VERSION}}
- **Runtime:** {{RUNTIME}}

### Framework
- **Framework:** {{FRAMEWORK}}
- **Version:** {{FRAMEWORK_VERSION}}
- **Why:** {{FRAMEWORK_REASON}}

### Database
- **Type:** {{DATABASE_TYPE}}
- **Version:** {{DATABASE_VERSION}}
- **Hosting:** {{DATABASE_HOSTING}}
- **Why:** {{DATABASE_REASON}}

### Additional Technologies
{{ADDITIONAL_TECH}}

---

## Architecture

### High-Level Structure

{{ARCHITECTURE_DESCRIPTION}}

```
{{ARCHITECTURE_DIAGRAM}}

Example:
User → API Gateway → Backend Service → Database
                            ↓
                    Background Jobs
```

### Data Flow

{{DATA_FLOW_DESCRIPTION}}

### API Design

{{API_DESIGN}}

Endpoints, request/response formats, authentication

---

## Dependencies

### Internal Dependencies
{{INTERNAL_DEPS}}

Projects this depends on:
- {{PROJECT_A}}: API endpoints for {{purpose}}
- {{PROJECT_B}}: Shared types/schemas

### External Dependencies
{{EXTERNAL_DEPS}}

Third-party services:
- {{SERVICE_A}}: Authentication (Auth0, Firebase Auth, etc.)
- {{SERVICE_B}}: Payment processing (Stripe, etc.)
- {{SERVICE_C}}: Email (SendGrid, etc.)

### Package Dependencies

{{PACKAGE_DEPS}}

Major libraries/frameworks to install

---

## Deployment

### Hosting
- **Platform:** {{DEPLOYMENT_PLATFORM}}
- **Region:** {{DEPLOYMENT_REGION}}
- **Why:** {{DEPLOYMENT_REASON}}

### Environments
- **Development:** {{DEV_ENV}}
- **Staging:** {{STAGING_ENV}}
- **Production:** {{PROD_ENV}}

### CI/CD Pipeline

{{CICD_DESCRIPTION}}

---

## Configuration

### Environment Variables

{{ENV_VARS}}

Required configuration:
- DATABASE_URL
- API_KEY
- etc.

### Feature Flags

{{FEATURE_FLAGS}}

---

## Technical Decisions

{{TECHNICAL_DECISIONS}}

### Decision: {{DECISION_TITLE}}
- **Choice:** {{CHOICE}}
- **Reason:** {{REASON}}
- **Date:** {{DECISION_DATE}}
- **Alternatives Considered:** {{ALTERNATIVES}}

---

## Development Setup

### Prerequisites

{{PREREQUISITES}}

Required tools:
- Node.js v{{VERSION}}
- Database client
- etc.

### Local Development

{{DEV_SETUP}}

```bash
# Example commands
npm install
npm run dev
```

---

## Testing Strategy

### Unit Tests
{{UNIT_TEST_APPROACH}}

### Integration Tests
{{INTEGRATION_TEST_APPROACH}}

### E2E Tests
{{E2E_TEST_APPROACH}}

### Coverage Goals
- Target: {{COVERAGE_TARGET}}%
- Current: {{CURRENT_COVERAGE}}%

---

## Performance Targets

{{PERFORMANCE_TARGETS}}

- Response time: < {{TARGET_MS}}ms
- Throughput: {{TARGET_RPS}} requests/second
- Concurrent users: {{TARGET_USERS}}

---

## Security Considerations

{{SECURITY_NOTES}}

- Authentication approach
- Authorization model
- Data encryption
- Security scanning

---

## Monitoring & Observability

### Metrics

{{METRICS_TO_TRACK}}

### Logging

{{LOGGING_STRATEGY}}

### Alerts

{{ALERT_CONFIGURATION}}

---

## Open Technical Questions

{{TECH_OPEN_QUESTIONS}}

---

**Template Version:** 1.0  
**Generated:** {{GENERATION_DATE}}

*This file describes HOW to build (technology-specific)*
